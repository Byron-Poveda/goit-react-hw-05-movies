{"version":3,"file":"static/js/870.c37c3216.chunk.js","mappings":"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","sources":["components/Buttton/Button.jsx","components/Pages/Settings.js","components/Pages/TMBD/ListMovies/ListMovies.jsx","components/Pages/TMBD/Movies/Movies.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ children, onClick, type, disabled, classButton, classText }) => {\n  return (\n    <button\n      className={`py-[5px] px-[10px] bg-blue-500 ${classButton}`}\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      <span className={`${classText} font-medium`}>{children}</span>\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  disabled: PropTypes.bool,\n  classButton: PropTypes.string,\n  classText: PropTypes.string,\n};\n\nButton.defaultProps = {\n  type: 'button',\n  disabled: false,\n};\n\nexport default Button;\n","export const headers= {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NjE3YzliNjRmNzI3NGRlOTZkMmMyYTJjNzdjNTkzZSIsInN1YiI6IjY0OTI3NTZhNzA2ZTU2MDEzYTY0ZjVkNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.XQ5XgFG--illCIpvwHSgN0k0o92xmS9SjDoFOE3DrSM'            \n}\nexport const baseURL = \"https://api.themoviedb.org/3\"\nexport const baseImgURL = \"https://image.tmdb.org/t/p/w300/\"\nexport const defaultImg = 'https://via.placeholder.com/300x450.png?text=Not+Found+Image';\nexport const defaultImgMovie = 'https://via.placeholder.com/300x180.png?text=Not+Found+Image';\nexport const genres = [\n    { id: 28, name: 'Action' },\n    { id: 12, name: 'Adventure' },\n    { id: 16, name: 'Animation' },\n    { id: 35, name: 'Comedy' },\n    { id: 80, name: 'Crime' },\n    { id: 99, name: 'Documentary' },\n    { id: 18, name: 'Drama' },\n    { id: 10751, name: 'Family' },\n    { id: 14, name: 'Fantasy' },\n    { id: 36, name: 'History' },\n    { id: 27, name: 'Horror' },\n    { id: 10402, name: 'Music' },\n    { id: 9648, name: 'Mystery' },\n    { id: 10749, name: 'Romance' },\n    { id: 878, name: 'Science Fiction' },\n    { id: 10770, name: 'TV Movie' },\n    { id: 53, name: 'Thriller' },\n    { id: 10752, name: 'War' },\n    { id: 37, name: 'Western' },\n  ];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { baseImgURL, defaultImgMovie } from 'components/Pages/Settings';\nfunction ListMovies({ movies }) {\n  if (movies?.length === 0) {\n    return <p>No hay pel√≠culas disponibles.</p>;\n  }\n\n  return (\n    <ul className='grid grid-cols-4 gap-4 max-[950px]:grid-cols-3 max-[950px]:gap-3 max-md:grid-cols-2 max-md:gap-2 max-[450px]:grid-cols-1 max-[450px]:gap-1'>\n      {movies?.map((movie) => (\n        <li className='flex relative border-solid border-gray-800 rounded-[15px] border-2 p-[1px] overflow-hidden' key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`}>\n            <img className='rounded-[15px] max-md:w-[350px] max-[450px]:w-[400px]' src={movie?.backdrop_path ? baseImgURL + movie?.backdrop_path : defaultImgMovie} alt={movie?.title || movie?.name} />\n            <div className='w-full py-[5px] absolute bottom-0 text-center' style={{backgroundColor : '#000000ab'}}><p className='text-white font-bold text-[12px]'>{movie?.title || movie?.name}</p></div>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nListMovies.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default ListMovies;\n","import React, { useState } from 'react'\nimport Section from 'components/Section/Section'\nimport ListMovies from '../ListMovies/ListMovies'\nimport { baseURL, headers } from 'components/Pages/Settings'\nimport Button from 'components/Buttton/Button'\nimport axios from 'axios'\nimport \"./movies.css\"\nconst Movies = () => {\n  const [search, setSearch] = useState({});\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputValue = (e) => setInputValue(e.target.value)\n    const getMovies = (e) =>{\n      e.preventDefault()\n        axios({\n            method: 'get',\n            baseURL,\n            url: `/search/movie?query=${inputValue}&include_adult=false&language=en-US&page=1`,\n            headers,\n          })\n        .then(response => setSearch(response.data))\n        .catch(err => console.log(err))\n        setInputValue(\"\")\n      }\n  return (\n    <Section title=\"Movies\">\n      <form onSubmit={getMovies}>\n      <div>\n        <div className=\"flex gap-[8px] mb-[15px]\">\n          <input value={inputValue} onChange={handleInputValue} type=\"text\" name=\"search\" id=\"search\" autoComplete=\"off\" className=\"input-search\"/>\n          <Button type=\"submit\" classButton='button-search'><i className=\"ri-search-line\"></i></Button>\n        </div>\n      </div>\n      </form>\n      {search.page ? <ListMovies movies={search.results}/> : null}\n    </Section>\n  )\n}\n\nexport default Movies\n"],"names":["Button","_ref","children","onClick","type","disabled","classButton","classText","_jsx","className","concat","defaultProps","headers","accept","Authorization","baseURL","baseImgURL","defaultImg","defaultImgMovie","genres","id","name","movies","length","map","movie","_jsxs","NavLink","to","src","backdrop_path","alt","title","style","backgroundColor","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","inputValue","setInputValue","Section","onSubmit","e","preventDefault","axios","method","url","then","response","data","catch","err","console","log","value","onChange","target","autoComplete","page","ListMovies","results"],"sourceRoot":""}